TESTING tests/test/directive-prolog/migrated_0000.tree.json
TESTING tests/test/directive-prolog/migrated_0001.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0000.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0001.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0002.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0003.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0004.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0005.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0006.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0007.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0008.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0009.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0010.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0011.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0012.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0013.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0014.tree.json
TESTING tests/test/automatic-semicolon-insertion/migrated_0015.tree.json
TESTING tests/test/source-element/migrated_0000.tree.json
TESTING tests/test/source-option/migrated_0000.tree.json
TESTING tests/test/source-option/migrated_0001.tree.json
TESTING tests/test/whitespace/migrated_0000.tree.json
TESTING tests/test/whitespace/migrated_0001.tree.json
TESTING tests/test/ES2016/identifier/gujarati_zha.tree.json
TESTING tests/test/ES6/arrow-function/arrow-with-multiple-arg-and-rest.tree.json
TESTING tests/test/ES6/arrow-function/arrow-with-only-rest.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0000.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0001.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0002.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0003.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0004.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0005.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0006.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0007.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0008.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0009.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0010.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0011.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0012.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0013.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0014.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0015.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0016.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0017.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0018.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0019.tree.json
TESTING tests/test/ES6/arrow-function/migrated_0020.tree.json
TESTING tests/test/ES6/binary-integer-literal/migrated_0000.tree.json
TESTING tests/test/ES6/binary-integer-literal/migrated_0001.tree.json
TESTING tests/test/ES6/binary-integer-literal/migrated_0002.tree.json
TESTING tests/test/ES6/binary-integer-literal/migrated_0003.tree.json
TESTING tests/test/ES6/binary-integer-literal/migrated_0004.tree.json
TESTING tests/test/ES6/binary-integer-literal/migrated_0005.tree.json
TESTING tests/test/ES6/class/migrated_0000.tree.json
TESTING tests/test/ES6/class/migrated_0001.tree.json
TESTING tests/test/ES6/class/migrated_0002.tree.json
TESTING tests/test/ES6/class/migrated_0003.tree.json
TESTING tests/test/ES6/class/migrated_0004.tree.json
TESTING tests/test/ES6/class/migrated_0005.tree.json
TESTING tests/test/ES6/class/migrated_0006.tree.json
TESTING tests/test/ES6/class/migrated_0007.tree.json
TESTING tests/test/ES6/class/migrated_0008.tree.json
TESTING tests/test/ES6/class/migrated_0009.tree.json
TESTING tests/test/ES6/class/migrated_0010.tree.json
TESTING tests/test/ES6/class/migrated_0011.tree.json
TESTING tests/test/ES6/class/migrated_0012.tree.json
TESTING tests/test/ES6/class/migrated_0013.tree.json
TESTING tests/test/ES6/class/migrated_0014.tree.json
TESTING tests/test/ES6/class/migrated_0015.tree.json
TESTING tests/test/ES6/class/migrated_0016.tree.json
TESTING tests/test/ES6/class/migrated_0017.tree.json
TESTING tests/test/ES6/class/migrated_0018.tree.json
TESTING tests/test/ES6/class/migrated_0019.tree.json
TESTING tests/test/ES6/class/migrated_0020.tree.json
TESTING tests/test/ES6/class/migrated_0021.tree.json
TESTING tests/test/ES6/class/migrated_0022.tree.json
TESTING tests/test/ES6/class/migrated_0023.tree.json
TESTING tests/test/ES6/class/migrated_0024.tree.json
TESTING tests/test/ES6/class/migrated_0025.tree.json
TESTING tests/test/ES6/class/migrated_0026.tree.json
TESTING tests/test/ES6/default-parameter-value/migrated_0000.tree.json
TESTING tests/test/ES6/default-parameter-value/migrated_0001.tree.json
TESTING tests/test/ES6/default-parameter-value/migrated_0002.tree.json
TESTING tests/test/ES6/for-of/for-of-array-pattern-let.tree.json
TESTING tests/test/ES6/for-of/for-of-array-pattern-var.tree.json
TESTING tests/test/ES6/for-of/for-of-array-pattern.tree.json
TESTING tests/test/ES6/for-of/for-of-let.tree.json
TESTING tests/test/ES6/for-of/for-of-object-pattern-const.tree.json
TESTING tests/test/ES6/for-of/for-of-object-pattern-var.tree.json
TESTING tests/test/ES6/for-of/for-of-object-pattern.tree.json
TESTING tests/test/ES6/for-of/for-of-with-const.tree.json
TESTING tests/test/ES6/for-of/for-of-with-let.tree.json
TESTING tests/test/ES6/for-of/for-of-with-var.tree.json
TESTING tests/test/ES6/for-of/for-of.tree.json
TESTING tests/test/ES6/for-of/let-of-of.tree.json
TESTING tests/test/ES6/generator/generator-declaration-with-params.tree.json
TESTING tests/test/ES6/generator/generator-declaration-with-yield-delegate.tree.json
TESTING tests/test/ES6/generator/generator-declaration-with-yield.tree.json
TESTING tests/test/ES6/generator/generator-declaration.tree.json
TESTING tests/test/ES6/generator/generator-expression-rest-param.tree.json
TESTING tests/test/ES6/generator/generator-expression-with-params.tree.json
TESTING tests/test/ES6/generator/generator-expression-with-yield-delegate.tree.json
TESTING tests/test/ES6/generator/generator-expression-with-yield.tree.json
TESTING tests/test/ES6/generator/generator-expression.tree.json
TESTING tests/test/ES6/generator/generator-method-with-params.tree.json
TESTING tests/test/ES6/generator/generator-method-with-yield-delegate.tree.json
TESTING tests/test/ES6/generator/generator-method-with-yield-expression.tree.json
TESTING tests/test/ES6/generator/generator-method-with-yield-line-terminator.tree.json
TESTING tests/test/ES6/generator/generator-method-with-yield.tree.json
TESTING tests/test/ES6/generator/generator-method.tree.json
TESTING tests/test/ES6/generator/static-generator-method-with-computed-name.tree.json
TESTING tests/test/ES6/generator/static-generator-method.tree.json
TESTING tests/test/ES6/identifier/dakuten_handakuten.tree.json
TESTING tests/test/ES6/identifier/escaped_all.tree.json
TESTING tests/test/ES6/identifier/escaped_math_alef.tree.json
TESTING tests/test/ES6/identifier/escaped_math_dal_part.tree.json
TESTING tests/test/ES6/identifier/escaped_math_kaf_lam.tree.json
TESTING tests/test/ES6/identifier/escaped_math_zain_start.tree.json
TESTING tests/test/ES6/identifier/escaped_part.tree.json
TESTING tests/test/ES6/identifier/escaped_start.tree.json
TESTING tests/test/ES6/identifier/estimated.tree.json
TESTING tests/test/ES6/identifier/ethiopic_digits.tree.json
TESTING tests/test/ES6/identifier/math_alef.tree.json
TESTING tests/test/ES6/identifier/math_dal_part.tree.json
TESTING tests/test/ES6/identifier/math_kaf_lam.tree.json
TESTING tests/test/ES6/identifier/math_zain_start.tree.json
TESTING tests/test/ES6/identifier/module_await.tree.json
SKIPPING MODULE
TESTING tests/test/ES6/identifier/valid_await.tree.json
TESTING tests/test/ES6/identifier/weierstrass.tree.json
TESTING tests/test/ES6/identifier/weierstrass_weierstrass.tree.json
TESTING tests/test/ES6/lexical-declaration/for_let_in.tree.json
TESTING tests/test/ES6/lexical-declaration/let_assign.tree.json
TESTING tests/test/ES6/lexical-declaration/let_identifier.tree.json
TESTING tests/test/ES6/lexical-declaration/let_member.tree.json
TESTING tests/test/ES6/lexical-declaration/migrated_0000.tree.json
TESTING tests/test/ES6/lexical-declaration/module_let.tree.json
SKIPPING MODULE
TESTING tests/test/ES6/meta-property/assign-new-target.tree.json
TESTING tests/test/ES6/meta-property/new-new-target.tree.json
TESTING tests/test/ES6/meta-property/new-target-declaration.tree.json
TESTING tests/test/ES6/meta-property/new-target-expression.tree.json
TESTING tests/test/ES6/meta-property/new-target-invoke.tree.json
TESTING tests/test/ES6/meta-property/new-target-precedence.tree.json
TESTING tests/test/ES6/method-definition/migrated_0000.tree.json
TESTING tests/test/ES6/method-definition/migrated_0001.tree.json
TESTING tests/test/ES6/method-definition/migrated_0002.tree.json
TESTING tests/test/ES6/method-definition/migrated_0003.tree.json
TESTING tests/test/ES6/method-definition/migrated_0004.tree.json
TESTING tests/test/ES6/object-literal-property-value-shorthand/migrated_0000.tree.json
TESTING tests/test/ES6/octal-integer-literal/migrated_0000.tree.json
TESTING tests/test/ES6/octal-integer-literal/migrated_0001.tree.json
TESTING tests/test/ES6/octal-integer-literal/migrated_0002.tree.json
TESTING tests/test/ES6/octal-integer-literal/migrated_0003.tree.json
TESTING tests/test/ES6/octal-integer-literal/migrated_0004.tree.json
TESTING tests/test/ES6/octal-integer-literal/migrated_0005.tree.json
TESTING tests/test/ES6/octal-integer-literal/migrated_0006.tree.json
TESTING tests/test/ES6/object-initialiser/proto-identifier-getter-setter.tree.json
TESTING tests/test/ES6/object-initialiser/proto-identifier-getter.tree.json
TESTING tests/test/ES6/object-initialiser/proto-identifier-method.tree.json
TESTING tests/test/ES6/object-initialiser/proto-identifier-setter.tree.json
TESTING tests/test/ES6/object-initialiser/proto-literal-getter-setter.tree.json
TESTING tests/test/ES6/object-initialiser/proto-literal-getter.tree.json
TESTING tests/test/ES6/object-initialiser/proto-literal-method.tree.json
TESTING tests/test/ES6/object-initialiser/proto-literal-setter.tree.json
TESTING tests/test/ES6/rest-parameter/function-declaration.tree.json
TESTING tests/test/ES6/rest-parameter/function-expression.tree.json
TESTING tests/test/ES6/rest-parameter/object-method.tree.json
TESTING tests/test/ES6/rest-parameter/object-shorthand-method.tree.json
TESTING tests/test/ES6/super-property/arrow_super.tree.json
TESTING tests/test/ES6/super-property/constructor_super.tree.json
TESTING tests/test/ES6/super-property/new_super.tree.json
TESTING tests/test/ES6/super-property/super_computed.tree.json
TESTING tests/test/ES6/super-property/super_member.tree.json
TESTING tests/test/ES6/spread-element/call-multi-spread.tree.json
TESTING tests/test/ES6/spread-element/call-spread-default.tree.json
TESTING tests/test/ES6/spread-element/call-spread-first.tree.json
TESTING tests/test/ES6/spread-element/call-spread-number.tree.json

"type": "comp"
"test": "tests/test/ES6/spread-element/call-spread-number"
"val": 
|  "body": 
|  |  "0": 
|  |  |  "expression": 
|  |  |  |  "arguments": 
|  |  |  |  |  "0": 
|  |  |  |  |  |  "argument": 
|  |  |  |  |  |  |  "range": 
|  |  |  |  |  |  |  |  "0": 
|  |  |  |  |  |  |  |  |  "type": "not-equal"
|  |  |  |  |  |  |  |  |  "actual": 6
|  |  |  |  |  |  |  |  |  "expected": "5()"
|  
"expected": 
|  "type": "Program"
|  "body": 
|  |  [1]: 
|  |  |  "range": 
|  |  |  |  [1]: 0
|  |  |  |  [2]: 9
|  |  |  |  
|  |  |  "loc": 
|  |  |  |  "start": 
|  |  |  |  |  "line": 1
|  |  |  |  |  "column": 0
|  |  |  |  |  
|  |  |  |  "end": 
|  |  |  |  |  "line": 1
|  |  |  |  |  "column": 9
|  |  |  |  
|  |  |  "type": "ExpressionStatement"
|  |  |  "expression": 
|  |  |  |  "range": 
|  |  |  |  |  [1]: 0
|  |  |  |  |  [2]: 8
|  |  |  |  |  
|  |  |  |  "loc": 
|  |  |  |  |  "start": 
|  |  |  |  |  |  "line": 1
|  |  |  |  |  |  "column": 0
|  |  |  |  |  |  
|  |  |  |  |  "end": 
|  |  |  |  |  |  "line": 1
|  |  |  |  |  |  "column": 8
|  |  |  |  |  
|  |  |  |  "type": "CallExpression"
|  |  |  |  "callee": 
|  |  |  |  |  "range": 
|  |  |  |  |  |  [1]: 0
|  |  |  |  |  |  [2]: 1
|  |  |  |  |  |  
|  |  |  |  |  "loc": 
|  |  |  |  |  |  "start": 
|  |  |  |  |  |  |  "line": 1
|  |  |  |  |  |  |  "column": 0
|  |  |  |  |  |  |  
|  |  |  |  |  |  "end": 
|  |  |  |  |  |  |  "line": 1
|  |  |  |  |  |  |  "column": 1
|  |  |  |  |  |  
|  |  |  |  |  "type": "Identifier"
|  |  |  |  |  "name": "f"
|  |  |  |  |  
|  |  |  |  "arguments": 
|  |  |  |  |  [1]: 
|  |  |  |  |  |  "range": 
|  |  |  |  |  |  |  [1]: 2
|  |  |  |  |  |  |  [2]: 7
|  |  |  |  |  |  |  
|  |  |  |  |  |  "loc": 
|  |  |  |  |  |  |  "start": 
|  |  |  |  |  |  |  |  "line": 1
|  |  |  |  |  |  |  |  "column": 2
|  |  |  |  |  |  |  |  
|  |  |  |  |  |  |  "end": 
|  |  |  |  |  |  |  |  "line": 1
|  |  |  |  |  |  |  |  "column": 7
|  |  |  |  |  |  |  
|  |  |  |  |  |  "type": "SpreadElement"
|  |  |  |  |  |  "argument": 
|  |  |  |  |  |  |  "range": 
|  |  |  |  |  |  |  |  [1]: 5
|  |  |  |  |  |  |  |  [2]: 7
|  |  |  |  |  |  |  |  
|  |  |  |  |  |  |  "loc": 
|  |  |  |  |  |  |  |  "start": 
|  |  |  |  |  |  |  |  |  "line": 1
|  |  |  |  |  |  |  |  |  "column": 5
|  |  |  |  |  |  |  |  |  
|  |  |  |  |  |  |  |  "end": 
|  |  |  |  |  |  |  |  |  "line": 1
|  |  |  |  |  |  |  |  |  "column": 7
|  |  |  |  |  |  |  |  
|  |  |  |  |  |  |  "type": "Literal"
|  |  |  |  |  |  |  "value": 0.5
|  |  
|  "sourceType": "script"
|  "range": 
|  |  [1]: 0
|  |  [2]: 9
|  |  
|  "loc": 
|  |  "start": 
|  |  |  "line": 1
|  |  |  "column": 0
|  |  |  
|  |  "end": 
|  |  |  "line": 1
|  |  |  "column": 9
|  
"actual": 
|  "type": "Program"
|  "body": 
|  |  [1]: 
|  |  |  "type": "ExpressionStatement"
|  |  |  "expression": 
|  |  |  |  "type": "CallExpression"
|  |  |  |  "callee": 
|  |  |  |  |  "type": "Identifier"
|  |  |  |  |  "name": "f"
|  |  |  |  |  "loc": 
|  |  |  |  |  |  "start": 
|  |  |  |  |  |  |  "line": 1
|  |  |  |  |  |  |  "column": 0
|  |  |  |  |  |  |  
|  |  |  |  |  |  "end": 
|  |  |  |  |  |  |  "line": 1
|  |  |  |  |  |  |  "column": 1
|  |  |  |  |  |  
|  |  |  |  |  "range": 
|  |  |  |  |  |  [1]: 0
|  |  |  |  |  |  [2]: 1
|  |  |  |  |  
|  |  |  |  "arguments": 
|  |  |  |  |  [1]: 
|  |  |  |  |  |  "type": "SpreadElement"
|  |  |  |  |  |  "loc": 
|  |  |  |  |  |  |  "start": 
|  |  |  |  |  |  |  |  "line": 1
|  |  |  |  |  |  |  |  "column": 2
|  |  |  |  |  |  |  |  
|  |  |  |  |  |  |  "end": 
|  |  |  |  |  |  |  |  "line": 1
|  |  |  |  |  |  |  |  "column": 7
|  |  |  |  |  |  |  
|  |  |  |  |  |  "argument": 
|  |  |  |  |  |  |  "type": "Literal"
|  |  |  |  |  |  |  "value": 0.5
|  |  |  |  |  |  |  "loc": 
|  |  |  |  |  |  |  |  "start": 
|  |  |  |  |  |  |  |  |  "line": 1
|  |  |  |  |  |  |  |  |  "column": 5
|  |  |  |  |  |  |  |  |  
|  |  |  |  |  |  |  |  "end": 
|  |  |  |  |  |  |  |  |  "line": 1
|  |  |  |  |  |  |  |  |  "column": 7
|  |  |  |  |  |  |  |  
|  |  |  |  |  |  |  "range": 
|  |  |  |  |  |  |  |  [1]: 6
|  |  |  |  |  |  |  |  [2]: 7
|  |  |  |  |  |  |  
|  |  |  |  |  |  "range": 
|  |  |  |  |  |  |  [1]: 2
|  |  |  |  |  |  |  [2]: 7
|  |  |  |  |  
|  |  |  |  "loc": 
|  |  |  |  |  "start": 
|  |  |  |  |  |  "line": 1
|  |  |  |  |  |  "column": 0
|  |  |  |  |  |  
|  |  |  |  |  "end": 
|  |  |  |  |  |  "line": 1
|  |  |  |  |  |  "column": 8
|  |  |  |  |  
|  |  |  |  "range": 
|  |  |  |  |  [1]: 0
|  |  |  |  |  [2]: 8
|  |  |  |  
|  |  |  "loc": 
|  |  |  |  "start": 
|  |  |  |  |  "line": 1
|  |  |  |  |  "column": 0
|  |  |  |  |  
|  |  |  |  "end": 
|  |  |  |  |  "line": 1
|  |  |  |  |  "column": 9
|  |  |  |  
|  |  |  "range": 
|  |  |  |  [1]: 0
|  |  |  |  [2]: 9
|  |  
|  "sourceType": "script"
|  "loc": 
|  |  "start": 
|  |  |  "line": 1
|  |  |  "column": 0
|  |  |  
|  |  "end": 
|  |  |  "line": 1
|  |  |  "column": 9
|  |  
|  "range": 
|  |  [1]: 0
|  |  [2]: 9
|  
"src": 
|  [1]: "f(....5);
"
|  [2]: false
