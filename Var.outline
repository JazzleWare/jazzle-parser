Var {
   realName string;
   synthName string;
   scope Scope;
   enum VarType {
      VAR_REAL,
      VAR_TEMP,
      VAR_SCOPE_NAME
   }
   t VarType
   if t == VAR_SCOPE_NAME {
      childVars []Var
   }
}

A let var that has been forward-reference from a function:
ForwardInirectLexicalVar < Var {
   scopeObjName string
}

A synthetic variable that stores a scope object:
ScopeObjVar < Var {
   children []Var
}

Any other var:
SimpleVar < Var {
}

Var {
  realName string
  emitName string
  scope Scope
}
       

